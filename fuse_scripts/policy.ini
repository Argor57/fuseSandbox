# The sections must be named "read", "write" or "execute" according to the UNIX Filesystem permissionsCCESS (open) DENIED --- Path:
# Other permitted guidelines are: ["written-no-execute", "first-object-only"].
# The policies ["first-object-only"] can only be used on directories.
# ATTENTION: The execute section is only used if the access system call is used to check the existence of execution rights
#
# To grant or deny access to a path or a variety of paths you must define a key-value pair, that
# will be interpreted as follows:
# <regular expression> = <access granted or denied>
#
# The regular expression will be interpreted in Python dialect, so if you want to match exactly the file "123.png"
# for example you have to specify "123\.png" to escape the dot that would be interpreted as a wildcard otherwise
#
# For access checks the most specific RegEx will be used
# That refers to the RegEx with the longest wildcard-free prefix
# If two RegExs have the same length of the wildcard-free prefix, the upper one will be chosen
#
# A normal, recursive wildcard "*" should be implemented as ".*"
# A non-recursive wildcard "**" should be implemented as "[^/]*"

[read]
#/[^/]*/[^/]* = deny
#/123\.png = allow                                                                             
/ = allow
/.* = allow

## test_read
#[read]
#/ = allow
#/file.txt = deny
#/foo/a = allow 
## test_end

[write]
/ = allow
/.* = allow

## test_write
#[write]
#/ = allow
#/file.txt = deny
#/foo/a = allow 
## test_end

[execute]
/ = allow 
/.* = allow

## test_exec
#[execute]
#/ = allow
#/file = deny 
#/foo/file = allow
## test_end

#[written-no-execute]

## test_ewww
#[written-no-execute]
#/file = deny 
# test_end

## demo_ewww
#[written-no-execute]
/demo/ewww-demo = deny 
# demo_end

#[first-object-only]

## test_foo
#[first-object-only]
#/ = deny
#/foo = allow
#/foo/bar = deny
#/foo/bar/baz = allow
## test_end
